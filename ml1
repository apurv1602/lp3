import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings("ignore")

data=pd.read_csv("uber.csv")

df=data.copy()

df.head

df.info()

df.describe()

df.isnull().sum()

df.dropna(inplace=True)

plt.boxplot(df["fare_amount"])

q_low=df["fare_amount"].quantile(0.01)
q_hi=df["fare_amount"].quantile(0.75)
df =df[(df["fare_amount"]<q_hi) & (df["fare_amount"]>q_low)]

df.isnull().sum()

X = df[['pickup_latitude', 'pickup_longitude', 'dropoff_latitude', 'dropoff_longitude']]
y = df['fare_amount']
# Split the data into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Build a model
from sklearn.ensemble import RandomForestRegressor
model = RandomForestRegressor()
model.fit(X_train, y_train)
# Predicting on test set
predictions = model.predict(X_test)
# Evaluate the model
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test, predictions)
print('Mean Squared Error:', mse)
